"use strict";(self.webpackChunknew_attributico_su=self.webpackChunknew_attributico_su||[]).push([[5140],{2262:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>c,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"settings/comparison","title":"Value Comparison","description":"This setting defines the algorithm for updating Values after editing them. The mode names speak for themselves.","source":"@site/docs/settings/comparison.md","sourceDirName":"settings","slug":"/settings/comparison","permalink":"/new.attributico.su/docs/next/settings/comparison","draft":false,"unlisted":false,"editUrl":"https://github.com/slhome2010/new.attributico.su/docs/settings/comparison.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"Adding Values to a Product","permalink":"/new.attributico.su/docs/next/settings/product"},"next":{"title":"Quick Settings","permalink":"/new.attributico.su/docs/next/settings/quick-settings"}}');var i=n(4848),r=n(8453);const c={sidebar_position:6},l="Value Comparison",d={},o=[{value:"Difference Between Editing <strong>Templates</strong> and <strong>Values</strong>",id:"difference-between-editing-templates-and-values",level:2},{value:"Impact on Product Selection",id:"impact-on-product-selection",level:2},{value:"Impact on <strong>Value</strong> Deletion",id:"impact-on-value-deletion",level:2}];function a(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",mdxadmonitiontitle:"mdxadmonitiontitle",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"value-comparison",children:"Value Comparison"})}),"\n",(0,i.jsxs)(t.p,{children:["This setting defines the algorithm for updating ",(0,i.jsx)(t.strong,{children:"Values"})," after editing them. The mode names speak for themselves."]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsx)(t.tr,{children:(0,i.jsx)(t.th,{children:"Mode"})})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsx)(t.tr,{children:(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"By Substring Matching"})})}),(0,i.jsx)(t.tr,{children:(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"By Exact Match"})})})]})]}),"\n",(0,i.jsxs)(t.p,{children:["Saving or updating ",(0,i.jsx)(t.strong,{children:"Values"})," occurs when the single-line editor is closed unless the action is canceled with the ",(0,i.jsx)(t.code,{children:"Esc"})," key. At this moment, the system searches for the edited sample among all ",(0,i.jsx)(t.strong,{children:"Values"})," of the given ",(0,i.jsx)(t.strong,{children:"Attribute"})," and replaces it with the newly edited state."]}),"\n",(0,i.jsxs)(t.p,{children:["By default, the search and replace function updates all occurrences of the edited sample (substring) within the ",(0,i.jsx)(t.strong,{children:"Value"})," (string)."]}),"\n",(0,i.jsx)(t.p,{children:"For example, consider the following entries:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-php",children:"MP4/AVI, MP4-MPEG4/MP4-MPG/VOB, MP4/AVI/MKV, MP4/AVI/MKV/VOB\n"})}),"\n",(0,i.jsxs)(t.p,{children:["After replacing ",(0,i.jsx)(t.code,{children:"MP4"})," with ",(0,i.jsx)(t.code,{children:"MP3"}),", the result will be:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-php",children:"MP3/AVI, MP3-MPEG4/MP3-MPG/VOB, MP3/AVI/MKV, MP3/AVI/MKV/VOB\n"})}),"\n",(0,i.jsxs)(t.p,{children:["That is, all occurrences of ",(0,i.jsx)(t.code,{children:"MP4"})," are updated to ",(0,i.jsx)(t.code,{children:"MP3"}),"."]}),"\n",(0,i.jsxs)(t.p,{children:["Now, let's consider a case where such an update is undesirable. Suppose an ",(0,i.jsx)(t.strong,{children:"Attribute"})," has a set of ",(0,i.jsx)(t.strong,{children:"Values"})," (",(0,i.jsx)(t.strong,{children:"Templates"}),"):"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-php",children:"50, 50-100, 50/500/500-5000, 500\n"})}),"\n",(0,i.jsxs)(t.p,{children:["After replacing ",(0,i.jsx)(t.code,{children:"50"})," with ",(0,i.jsx)(t.code,{children:"50gr"}),", we get an unexpected result:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-php",children:"50gr, 50gr-100, 50gr/50gr0/50gr0-50gr00, 50gr0\n"})}),"\n",(0,i.jsxs)(t.p,{children:["Although this is a specific case, it can be accounted for. To ensure correctness, enable the ",(0,i.jsx)(t.strong,{children:"By Exact Match"})," setting. With this mode, the result will be:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-php",children:"50gr, 50-100, 50gr/500/500-5000, 500\n"})}),"\n",(0,i.jsxs)(t.h2,{id:"difference-between-editing-templates-and-values",children:["Difference Between Editing ",(0,i.jsx)(t.strong,{children:"Templates"})," and ",(0,i.jsx)(t.strong,{children:"Values"})]}),"\n",(0,i.jsxs)(t.admonition,{type:"info",children:[(0,i.jsx)(t.mdxadmonitiontitle,{}),(0,i.jsxs)(t.p,{children:["The above setting applies to editing ",(0,i.jsx)(t.strong,{children:"Values"}),"."]}),(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Templates"})," are always updated by exact match of the edited sample with the entire ",(0,i.jsx)(t.strong,{children:"Template"}),"."]})]}),"\n",(0,i.jsx)(t.h2,{id:"impact-on-product-selection",children:"Impact on Product Selection"}),"\n",(0,i.jsxs)(t.p,{children:["This setting also affects the selection of products that contain a specific ",(0,i.jsx)(t.strong,{children:"Attribute Value"}),"."]}),"\n",(0,i.jsxs)(t.p,{children:["For example, if the ",(0,i.jsx)(t.strong,{children:"By Substring Matching"})," mode is enabled, clicking on the ",(0,i.jsx)(t.strong,{children:"Attribute Value"})," ",(0,i.jsx)(t.code,{children:"20"}),"\r\nwill display products with ",(0,i.jsx)(t.strong,{children:"Values"})," ",(0,i.jsx)(t.code,{children:"20"}),", ",(0,i.jsx)(t.code,{children:"120"}),", ",(0,i.jsx)(t.code,{children:"200"})," in the product tree."]}),"\n",(0,i.jsxs)(t.p,{children:["If the ",(0,i.jsx)(t.strong,{children:"By Exact Match"})," mode is enabled, clicking on ",(0,i.jsx)(t.strong,{children:"Attribute Value"})," ",(0,i.jsx)(t.code,{children:"20"}),"\r\nwill display only products with ",(0,i.jsx)(t.strong,{children:"Value"})," ",(0,i.jsx)(t.code,{children:"20"}),"."]}),"\n",(0,i.jsxs)(t.h2,{id:"impact-on-value-deletion",children:["Impact on ",(0,i.jsx)(t.strong,{children:"Value"})," Deletion"]}),"\n",(0,i.jsxs)(t.p,{children:["This setting also affects ",(0,i.jsx)(t.a,{href:"/new.attributico.su/docs/next/module-features/delete-value",children:"value deletion"}),"."]}),"\n",(0,i.jsxs)(t.p,{children:["Suppose there is a product or multiple products where the ",(0,i.jsx)(t.strong,{children:"Attribute"})," ",(0,i.jsx)(t.code,{children:"Test Attribute 3.1"})," has a ",(0,i.jsx)(t.strong,{children:"Value"})," ",(0,i.jsx)(t.code,{children:"test value 3.2.1"}),"."]}),"\n",(0,i.jsxs)(t.p,{children:["If the ",(0,i.jsx)(t.strong,{children:"By Exact Match"})," mode is enabled, only ",(0,i.jsx)(t.strong,{children:"Attributes"})," with ",(0,i.jsx)(t.strong,{children:"Value"})," ",(0,i.jsx)(t.code,{children:"test value 3.2.1"})," will be deleted.\r\nIn ",(0,i.jsx)(t.strong,{children:"By Substring Matching"})," mode, ",(0,i.jsx)(t.strong,{children:"Attributes"})," with ",(0,i.jsx)(t.strong,{children:"Values"})," such as ",(0,i.jsx)(t.code,{children:"test value 3.2.1/test value 3.2.2"})," will also be deleted."]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>l});var s=n(6540);const i={},r=s.createContext(i);function c(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);